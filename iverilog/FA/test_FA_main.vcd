$date
	Wed Oct 23 01:04:42 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 1 ! ripout $end
$var wire 1 " c $end
$var reg 1 # a $end
$var reg 1 $ b $end
$var reg 1 % ripin $end
$var integer 32 & i [31:0] $end
$scope module adder $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 % cin $end
$var wire 1 ! cout $end
$var wire 1 ' s0 $end
$var wire 1 " s $end
$var wire 1 ( c1 $end
$var wire 1 ) c0 $end
$scope module ha1 $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 ' c $end
$var wire 1 ) rip $end
$upscope $end
$scope module ha2 $end
$var wire 1 ' a $end
$var wire 1 % b $end
$var wire 1 " c $end
$var wire 1 ( rip $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0)
0(
0'
b0 &
0%
0$
0#
0"
0!
$end
#3
b1 &
#5
1"
1%
#6
b10 &
#8
1'
1"
1$
0%
#9
b11 &
#11
1!
1(
0"
1%
#12
b100 &
#14
0!
0(
1"
1#
0$
0%
#15
b101 &
#17
1!
1(
0"
1%
#18
b110 &
#20
1)
0'
0(
0"
1$
0%
#21
b111 &
#23
1"
1%
#24
b1000 &
